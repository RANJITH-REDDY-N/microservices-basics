# Server and Application
server.port=8080
spring.application.name=api-gateway

# Eureka Client (Service Discovery)
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.enabled=true

# JWT Configuration
jwt.secret=t8zQw!p2#5D7g+KbPeShVmYq3s6v9y$B&E)H@McQfTjWnZr4u7x!A%D*G-JaNdRgUkXp2s5v8y/B?E

# Rate Limiting Configuration
rate.limit.requests-per-minute=30

# Spring Cloud Gateway - Dynamic Routing
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Spring Cloud Gateway - Static Routes with Circuit Breaker
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**,/api/auth/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[0].filters[1]=CircuitBreaker=name=user-service-circuit-breaker,fallbackUri=forward:/fallback/user-service

spring.cloud.gateway.routes[1].id=product-service
spring.cloud.gateway.routes[1].uri=lb://product-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/products/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[1].filters[1]=CircuitBreaker=name=product-service-circuit-breaker,fallbackUri=forward:/fallback/product-service

spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=lb://order-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/orders/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[2].filters[1]=CircuitBreaker=name=order-service-circuit-breaker,fallbackUri=forward:/fallback/order-service

spring.cloud.gateway.routes[3].id=graphql
spring.cloud.gateway.routes[3].uri=lb://product-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/graphql/**
spring.cloud.gateway.routes[3].filters[0]=CircuitBreaker=name=graphql-circuit-breaker,fallbackUri=forward:/fallback/graphql

# Circuit Breaker Configuration (Resilience4j)
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=3

# CORS Configuration
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true

# --- Weighted Round Robin Load Balancer Weights ---
# Format: loadbalancer.weights.<serviceId>[<host>:<port>]=<weight>
# Example: Assign more traffic to localhost:8081 for product-service
loadbalancer.weights.product-service[localhost:8081]=3
loadbalancer.weights.product-service[localhost:8082]=1

# Example: Assign equal traffic to two order-service instances
loadbalancer.weights.order-service[localhost:8091]=2
loadbalancer.weights.order-service[localhost:8092]=2

# Add more services/instances as needed

# Actuator (Health, Info, Metrics)
management.endpoints.web.exposure.include=health,info,metrics,gateway
management.endpoint.health.show-details=always

# Swagger/OpenAPI configuration for API Gateway
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# --- Swagger UI Aggregation for Downstream Services ---
springdoc.swagger-ui.urls[0].name=User Service
springdoc.swagger-ui.urls[0].url=http://localhost:8081/api-docs
springdoc.swagger-ui.urls[1].name=Product Service
springdoc.swagger-ui.urls[1].url=http://localhost:8082/api-docs
springdoc.swagger-ui.urls[2].name=Order Service
springdoc.swagger-ui.urls[2].url=http://localhost:8083/api-docs

# Logging Configuration
logging.level.com.microservices.apigateway=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG 